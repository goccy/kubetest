//go:build !ignore_autogenerated
// +build !ignore_autogenerated

package v1

import (
	"fmt"
	"os"
	"path/filepath"
)

type ArtifactManager struct {
	nameToLocalPaths map[string]string
}

func NewArtifactManager() *ArtifactManager {
	return &ArtifactManager{
		nameToLocalPaths: map[string]string{},
	}
}

func (m *ArtifactManager) AddArtifacts(artifacts []ArtifactSpec) error {
	for _, artifact := range artifacts {
		dir, err := os.MkdirTemp("", "artifact")
		if err != nil {
			return fmt.Errorf("kubetest: failed to create temporary directory for artifact: %w", err)
		}
		localPath := filepath.Join(dir, filepath.Base(artifact.Container.Path))
		m.nameToLocalPaths[artifact.Name] = localPath
	}
	return nil
}

func (m *ArtifactManager) LocalPathByName(name string) (string, error) {
	path, exists := m.nameToLocalPaths[name]
	if !exists {
		return "", errInvalidArtifactName(name)
	}
	return path, nil
}
